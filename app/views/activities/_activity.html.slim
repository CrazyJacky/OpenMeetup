- if activity.activable.class.name == 'Post'
  = render activity.activable
- elsif activity.activable.class.name == 'Image'
  = div_for activity, class: 'list_item avatar_item' do
    = render 'votes/set', item: activity.activable
    =' user_link activity.activable.user
    = tr('uploaded a picture ')
    p= link_to image_tag(activity.activable.image.url(:small), alt: '', height: 80, width: 80), activity.activable
- else
  = div_for activity, class: 'list_item avatar_item' do
    .avatar= user_avatar activity.user
    - if activity.activable.class.name == 'Event'
      =' user_link activity.activable.user
      = tr('created the meetup ')
      =' link_to activity.activable.title, activity.activable
    - elsif activity.activable.class.name == 'Group'
      =' user_link activity.activable.user
      = tr('created the meetup group ')
      =' link_to activity.activable.name, activity.activable
    - elsif activity.activable.class.name == 'Membership'
      =' user_link activity.activable.user
      = tr('has joined the group ')
      =' link_to activity.activable.group.name, activity.activable.group
    - elsif activity.activable.class.name == 'Participation'
      =' user_link activity.activable.user
      = tr('will participate at ')
      =' link_to activity.activable.event.title, activity.activable.event
    - elsif activity.activable.class.name == 'Tagging'
      =' user_link activity.activable.user
      = tr('follows ')
      =' link_to activity.activable.tag.name, activity.activable.tag
    - elsif activity.activable.class.name == 'UserFollow'
      =' user_link activity.activable.user
      = tr('follows ')
      // FIXME
    - elsif activity.activable.class.name == 'Comment'
      =' user_link activity.activable.user
      = tr('made ')
      = link_to tr('a new comment'), activity.activable.commentable, rel: 'modal'
      | .
      p= activity.activable.comment
    - elsif activity.activable.class.name == 'Review'
      =' user_link activity.activable.user
      = tr('wrote a review for the event ')
      = link_to activity.activable.event.title, activity.activable.event
      p= activity.activable.review
    - elsif activity.activable.class.name == 'User'
      =' user_link activity.activable
      = tr('joined {sitename}', "Activity: user join", {:sitename => Settings.sitename})
    - elsif activity.activable.class.name == 'Vote'
      =' user_link activity.activable.user
      = tr('liked')
      .activity_item= render activity.activable.voteable

    //.date= timeago_tag activity.created_at

    - if activity.activable.class.name =~ /Event|Group|Membership|Participation|Review|UserFollow/
      = render 'comments/comments', commentable: activity

      - if current_user
        .comment_like_container
          .comment_container
            = link_to_function tr('Comment'), "$('#add-activity-comment-#{activity.id}').toggle().find('textarea').focus()"
          = render 'votes/set', item: activity
        .div(style="clear: both;")

        // p= link_to_function tr('Comment'), "$('#add-activity-comment-#{activity.id}').toggle().find('textarea').focus()"

        div(id="add-activity-comment-#{activity.id}" style="display: none;")
          = form_for Comment.new, url: polymorphic_path([activity, :comments]), remote: true do |f|
            = f.text_area :comment
            = f.submit trl('Add comment'), class: 'btn btn-primary', disable_with: trl('Sending...')
